[
  // Normal mode
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      "shift-h": "pane::ActivatePreviousItem",
      "shift-l": "pane::ActivateNextItem",
      "] h": "editor::GoToHunk",
      "[ h": "editor::GoToPreviousHunk",
      "g d": "editor::GoToDefinition",
      "g f": "editor::OpenExcerpts",
      "g i": "editor::GoToImplementation",
      "g r": "editor::FindAllReferences",
      "z A": "editor::FoldAll",
      "z u": "editor::UnfoldAll",
      "space w": "workspace::Save",
      "space a c": "agent::ToggleFocus",
      "space b o": "pane::CloseInactiveItems",
      "space f k": "zed::OpenKeymap",
      "space f w": "pane::DeploySearch",
      "space f g": "workspace::NewSearch",
      "space g c": "git::ExpandCommitEditor",
      "space g d": "git::Diff",
      "space g g": ["task::Spawn", { "task_name": "lazygit" }],
      "space g G": "git_panel::ToggleFocus",
      "space g s": "git::ToggleStaged",
      "space g D": "editor::ExpandAllDiffHunks",
      "space l a": "editor::ToggleCodeActions",
      "space l f": "editor::Format",
      "space l r": "editor::Rename",
      "space p o": "workspace::Open",
      "space p r": "projects::OpenRecent",
      "space q q": "workspace::CloseWindow",
      "space s o": "outline_panel::ToggleFocus",
      "space t i": "editor::ToggleInlayHints",
      "space t r": "task::Rerun",
      "space t s": "task::Spawn",
      "space t t": "workspace::ToggleBottomDock",
      "space x x": "diagnostics::Deploy",
      "space space": "file_finder::Toggle"
    }
  },
  // Visual mode
  {
    "context": "VimControl && !menu && !VimWaiting && vim_mode == visual",
    "bindings": {
      "a c": "assistant::QuoteSelection",
      "ctrl->": "vim::Indent",
      ">": ["workspace::SendKeystrokes", "ctrl-> g v"],
      "ctrl-<": "vim::Outdent",
      "<": ["workspace::SendKeystrokes", "ctrl-< g v"]
    }
  },
  // Normal and Visual mode
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      "space g p": "editor::ToggleSelectedDiffHunks",
      "space g r": "git::Restore"
    }
  },
  // Insert mode
  {
    "context": "vim_mode == insert",
    "bindings": {
      "j k": "vim::NormalBefore",
      "shift-enter": "vim::InsertLineBelow"
    }
  },
  // Git panel
  {
    "context": "GitPanel && ChangesList",
    "bindings": {
      "a": "git::StageAll",
      "d": "git::RestoreFile",
      "c": "git::Commit",
      "u": "git::UnstageAll",
      "p": "git::Push",
      "q": "workspace::ToggleLeftDock"
    }
  },
  // Editor
  {
    "context": "Editor",
    "bindings": {
      "ctrl-j": "menu::SelectNext",
      "ctrl-k": "menu::SelectPrevious"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "cmd-1": "workspace::ToggleLeftDock",
      "cmd-2": "workspace::ToggleRightDock",
      "cmd-`": "workspace::ToggleBottomDock"
    }
  },
  // Filetree keymaps
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "d": "project_panel::Delete",
      "r": "project_panel::Rename",
      "A": "project_panel::NewDirectory",
      "z": "project_panel::CollapseAllEntries",
      "space e": "workspace::ToggleLeftDock"
    }
  },
  // Enables space e to toggle project panel
  {
    "context": "VimControl && !menu || EmptyPane",
    "bindings": {
      "space e": "project_panel::ToggleFocus"
    }
  },
  // Movement between docks
  {
    "context": "VimControl && !menu || Dock",
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  // Keymaps when nothing is open
  {
    "context": "EmptyPane",
    "bindings": {
      "space a c": "agent::ToggleFocus",
      "space p o": "workspace::Open",
      "space p r": "projects::OpenRecent",
      "space t t": "terminal_panel::ToggleFocus",
      "space space": "file_finder::Toggle"
    }
  },
  // Move up and down completions/code actions
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {
      "ctrl-k": "editor::ContextMenuPrevious",
      "ctrl-j": "editor::ContextMenuNext"
    }
  },
  // Create new terminal pane
  {
    "context": "Terminal",
    "bindings": {
      "cmd-n": "workspace::NewTerminal"
    }
  },
  {
    "context": "GitPanel || ProjectPanel || CollabPanel || OutlinePanel || ChatPanel",
    "bindings": {
      "cmd-w": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "AgentPanel",
    "bindings": {
      "cmd-w": "workspace::ToggleRightDock"
    }
  }
]
